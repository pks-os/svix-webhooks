/*
Svix API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AttemptStatisticsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttemptStatisticsResponse{}

// AttemptStatisticsResponse struct for AttemptStatisticsResponse
type AttemptStatisticsResponse struct {
	Data AttemptStatisticsData `json:"data"`
	EndDate time.Time `json:"endDate"`
	Period StatisticsPeriod `json:"period"`
	StartDate time.Time `json:"startDate"`
}

type _AttemptStatisticsResponse AttemptStatisticsResponse

// NewAttemptStatisticsResponse instantiates a new AttemptStatisticsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttemptStatisticsResponse(data AttemptStatisticsData, endDate time.Time, period StatisticsPeriod, startDate time.Time) *AttemptStatisticsResponse {
	this := AttemptStatisticsResponse{}
	this.Data = data
	this.EndDate = endDate
	this.Period = period
	this.StartDate = startDate
	return &this
}

// NewAttemptStatisticsResponseWithDefaults instantiates a new AttemptStatisticsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttemptStatisticsResponseWithDefaults() *AttemptStatisticsResponse {
	this := AttemptStatisticsResponse{}
	return &this
}

// GetData returns the Data field value
func (o *AttemptStatisticsResponse) GetData() AttemptStatisticsData {
	if o == nil {
		var ret AttemptStatisticsData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *AttemptStatisticsResponse) GetDataOk() (*AttemptStatisticsData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *AttemptStatisticsResponse) SetData(v AttemptStatisticsData) {
	o.Data = v
}

// GetEndDate returns the EndDate field value
func (o *AttemptStatisticsResponse) GetEndDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *AttemptStatisticsResponse) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *AttemptStatisticsResponse) SetEndDate(v time.Time) {
	o.EndDate = v
}

// GetPeriod returns the Period field value
func (o *AttemptStatisticsResponse) GetPeriod() StatisticsPeriod {
	if o == nil {
		var ret StatisticsPeriod
		return ret
	}

	return o.Period
}

// GetPeriodOk returns a tuple with the Period field value
// and a boolean to check if the value has been set.
func (o *AttemptStatisticsResponse) GetPeriodOk() (*StatisticsPeriod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Period, true
}

// SetPeriod sets field value
func (o *AttemptStatisticsResponse) SetPeriod(v StatisticsPeriod) {
	o.Period = v
}

// GetStartDate returns the StartDate field value
func (o *AttemptStatisticsResponse) GetStartDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *AttemptStatisticsResponse) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *AttemptStatisticsResponse) SetStartDate(v time.Time) {
	o.StartDate = v
}

func (o AttemptStatisticsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttemptStatisticsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["endDate"] = o.EndDate
	toSerialize["period"] = o.Period
	toSerialize["startDate"] = o.StartDate
	return toSerialize, nil
}

func (o *AttemptStatisticsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"endDate",
		"period",
		"startDate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAttemptStatisticsResponse := _AttemptStatisticsResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAttemptStatisticsResponse)

	if err != nil {
		return err
	}

	*o = AttemptStatisticsResponse(varAttemptStatisticsResponse)

	return err
}

type NullableAttemptStatisticsResponse struct {
	value *AttemptStatisticsResponse
	isSet bool
}

func (v NullableAttemptStatisticsResponse) Get() *AttemptStatisticsResponse {
	return v.value
}

func (v *NullableAttemptStatisticsResponse) Set(val *AttemptStatisticsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAttemptStatisticsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAttemptStatisticsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttemptStatisticsResponse(val *AttemptStatisticsResponse) *NullableAttemptStatisticsResponse {
	return &NullableAttemptStatisticsResponse{value: val, isSet: true}
}

func (v NullableAttemptStatisticsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttemptStatisticsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


