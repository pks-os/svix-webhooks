/*
Svix API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CustomColorPalette type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomColorPalette{}

// CustomColorPalette struct for CustomColorPalette
type CustomColorPalette struct {
	BackgroundHover *string `json:"backgroundHover,omitempty"`
	BackgroundPrimary *string `json:"backgroundPrimary,omitempty"`
	BackgroundSecondary *string `json:"backgroundSecondary,omitempty"`
	ButtonPrimary *string `json:"buttonPrimary,omitempty"`
	InteractiveAccent *string `json:"interactiveAccent,omitempty"`
	NavigationAccent *string `json:"navigationAccent,omitempty"`
	Primary *string `json:"primary,omitempty"`
	TextDanger *string `json:"textDanger,omitempty"`
	TextPrimary *string `json:"textPrimary,omitempty"`
}

// NewCustomColorPalette instantiates a new CustomColorPalette object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomColorPalette() *CustomColorPalette {
	this := CustomColorPalette{}
	return &this
}

// NewCustomColorPaletteWithDefaults instantiates a new CustomColorPalette object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomColorPaletteWithDefaults() *CustomColorPalette {
	this := CustomColorPalette{}
	return &this
}

// GetBackgroundHover returns the BackgroundHover field value if set, zero value otherwise.
func (o *CustomColorPalette) GetBackgroundHover() string {
	if o == nil || IsNil(o.BackgroundHover) {
		var ret string
		return ret
	}
	return *o.BackgroundHover
}

// GetBackgroundHoverOk returns a tuple with the BackgroundHover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomColorPalette) GetBackgroundHoverOk() (*string, bool) {
	if o == nil || IsNil(o.BackgroundHover) {
		return nil, false
	}
	return o.BackgroundHover, true
}

// HasBackgroundHover returns a boolean if a field has been set.
func (o *CustomColorPalette) HasBackgroundHover() bool {
	if o != nil && !IsNil(o.BackgroundHover) {
		return true
	}

	return false
}

// SetBackgroundHover gets a reference to the given string and assigns it to the BackgroundHover field.
func (o *CustomColorPalette) SetBackgroundHover(v string) {
	o.BackgroundHover = &v
}

// GetBackgroundPrimary returns the BackgroundPrimary field value if set, zero value otherwise.
func (o *CustomColorPalette) GetBackgroundPrimary() string {
	if o == nil || IsNil(o.BackgroundPrimary) {
		var ret string
		return ret
	}
	return *o.BackgroundPrimary
}

// GetBackgroundPrimaryOk returns a tuple with the BackgroundPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomColorPalette) GetBackgroundPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.BackgroundPrimary) {
		return nil, false
	}
	return o.BackgroundPrimary, true
}

// HasBackgroundPrimary returns a boolean if a field has been set.
func (o *CustomColorPalette) HasBackgroundPrimary() bool {
	if o != nil && !IsNil(o.BackgroundPrimary) {
		return true
	}

	return false
}

// SetBackgroundPrimary gets a reference to the given string and assigns it to the BackgroundPrimary field.
func (o *CustomColorPalette) SetBackgroundPrimary(v string) {
	o.BackgroundPrimary = &v
}

// GetBackgroundSecondary returns the BackgroundSecondary field value if set, zero value otherwise.
func (o *CustomColorPalette) GetBackgroundSecondary() string {
	if o == nil || IsNil(o.BackgroundSecondary) {
		var ret string
		return ret
	}
	return *o.BackgroundSecondary
}

// GetBackgroundSecondaryOk returns a tuple with the BackgroundSecondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomColorPalette) GetBackgroundSecondaryOk() (*string, bool) {
	if o == nil || IsNil(o.BackgroundSecondary) {
		return nil, false
	}
	return o.BackgroundSecondary, true
}

// HasBackgroundSecondary returns a boolean if a field has been set.
func (o *CustomColorPalette) HasBackgroundSecondary() bool {
	if o != nil && !IsNil(o.BackgroundSecondary) {
		return true
	}

	return false
}

// SetBackgroundSecondary gets a reference to the given string and assigns it to the BackgroundSecondary field.
func (o *CustomColorPalette) SetBackgroundSecondary(v string) {
	o.BackgroundSecondary = &v
}

// GetButtonPrimary returns the ButtonPrimary field value if set, zero value otherwise.
func (o *CustomColorPalette) GetButtonPrimary() string {
	if o == nil || IsNil(o.ButtonPrimary) {
		var ret string
		return ret
	}
	return *o.ButtonPrimary
}

// GetButtonPrimaryOk returns a tuple with the ButtonPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomColorPalette) GetButtonPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonPrimary) {
		return nil, false
	}
	return o.ButtonPrimary, true
}

// HasButtonPrimary returns a boolean if a field has been set.
func (o *CustomColorPalette) HasButtonPrimary() bool {
	if o != nil && !IsNil(o.ButtonPrimary) {
		return true
	}

	return false
}

// SetButtonPrimary gets a reference to the given string and assigns it to the ButtonPrimary field.
func (o *CustomColorPalette) SetButtonPrimary(v string) {
	o.ButtonPrimary = &v
}

// GetInteractiveAccent returns the InteractiveAccent field value if set, zero value otherwise.
func (o *CustomColorPalette) GetInteractiveAccent() string {
	if o == nil || IsNil(o.InteractiveAccent) {
		var ret string
		return ret
	}
	return *o.InteractiveAccent
}

// GetInteractiveAccentOk returns a tuple with the InteractiveAccent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomColorPalette) GetInteractiveAccentOk() (*string, bool) {
	if o == nil || IsNil(o.InteractiveAccent) {
		return nil, false
	}
	return o.InteractiveAccent, true
}

// HasInteractiveAccent returns a boolean if a field has been set.
func (o *CustomColorPalette) HasInteractiveAccent() bool {
	if o != nil && !IsNil(o.InteractiveAccent) {
		return true
	}

	return false
}

// SetInteractiveAccent gets a reference to the given string and assigns it to the InteractiveAccent field.
func (o *CustomColorPalette) SetInteractiveAccent(v string) {
	o.InteractiveAccent = &v
}

// GetNavigationAccent returns the NavigationAccent field value if set, zero value otherwise.
func (o *CustomColorPalette) GetNavigationAccent() string {
	if o == nil || IsNil(o.NavigationAccent) {
		var ret string
		return ret
	}
	return *o.NavigationAccent
}

// GetNavigationAccentOk returns a tuple with the NavigationAccent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomColorPalette) GetNavigationAccentOk() (*string, bool) {
	if o == nil || IsNil(o.NavigationAccent) {
		return nil, false
	}
	return o.NavigationAccent, true
}

// HasNavigationAccent returns a boolean if a field has been set.
func (o *CustomColorPalette) HasNavigationAccent() bool {
	if o != nil && !IsNil(o.NavigationAccent) {
		return true
	}

	return false
}

// SetNavigationAccent gets a reference to the given string and assigns it to the NavigationAccent field.
func (o *CustomColorPalette) SetNavigationAccent(v string) {
	o.NavigationAccent = &v
}

// GetPrimary returns the Primary field value if set, zero value otherwise.
func (o *CustomColorPalette) GetPrimary() string {
	if o == nil || IsNil(o.Primary) {
		var ret string
		return ret
	}
	return *o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomColorPalette) GetPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.Primary) {
		return nil, false
	}
	return o.Primary, true
}

// HasPrimary returns a boolean if a field has been set.
func (o *CustomColorPalette) HasPrimary() bool {
	if o != nil && !IsNil(o.Primary) {
		return true
	}

	return false
}

// SetPrimary gets a reference to the given string and assigns it to the Primary field.
func (o *CustomColorPalette) SetPrimary(v string) {
	o.Primary = &v
}

// GetTextDanger returns the TextDanger field value if set, zero value otherwise.
func (o *CustomColorPalette) GetTextDanger() string {
	if o == nil || IsNil(o.TextDanger) {
		var ret string
		return ret
	}
	return *o.TextDanger
}

// GetTextDangerOk returns a tuple with the TextDanger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomColorPalette) GetTextDangerOk() (*string, bool) {
	if o == nil || IsNil(o.TextDanger) {
		return nil, false
	}
	return o.TextDanger, true
}

// HasTextDanger returns a boolean if a field has been set.
func (o *CustomColorPalette) HasTextDanger() bool {
	if o != nil && !IsNil(o.TextDanger) {
		return true
	}

	return false
}

// SetTextDanger gets a reference to the given string and assigns it to the TextDanger field.
func (o *CustomColorPalette) SetTextDanger(v string) {
	o.TextDanger = &v
}

// GetTextPrimary returns the TextPrimary field value if set, zero value otherwise.
func (o *CustomColorPalette) GetTextPrimary() string {
	if o == nil || IsNil(o.TextPrimary) {
		var ret string
		return ret
	}
	return *o.TextPrimary
}

// GetTextPrimaryOk returns a tuple with the TextPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomColorPalette) GetTextPrimaryOk() (*string, bool) {
	if o == nil || IsNil(o.TextPrimary) {
		return nil, false
	}
	return o.TextPrimary, true
}

// HasTextPrimary returns a boolean if a field has been set.
func (o *CustomColorPalette) HasTextPrimary() bool {
	if o != nil && !IsNil(o.TextPrimary) {
		return true
	}

	return false
}

// SetTextPrimary gets a reference to the given string and assigns it to the TextPrimary field.
func (o *CustomColorPalette) SetTextPrimary(v string) {
	o.TextPrimary = &v
}

func (o CustomColorPalette) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomColorPalette) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackgroundHover) {
		toSerialize["backgroundHover"] = o.BackgroundHover
	}
	if !IsNil(o.BackgroundPrimary) {
		toSerialize["backgroundPrimary"] = o.BackgroundPrimary
	}
	if !IsNil(o.BackgroundSecondary) {
		toSerialize["backgroundSecondary"] = o.BackgroundSecondary
	}
	if !IsNil(o.ButtonPrimary) {
		toSerialize["buttonPrimary"] = o.ButtonPrimary
	}
	if !IsNil(o.InteractiveAccent) {
		toSerialize["interactiveAccent"] = o.InteractiveAccent
	}
	if !IsNil(o.NavigationAccent) {
		toSerialize["navigationAccent"] = o.NavigationAccent
	}
	if !IsNil(o.Primary) {
		toSerialize["primary"] = o.Primary
	}
	if !IsNil(o.TextDanger) {
		toSerialize["textDanger"] = o.TextDanger
	}
	if !IsNil(o.TextPrimary) {
		toSerialize["textPrimary"] = o.TextPrimary
	}
	return toSerialize, nil
}

type NullableCustomColorPalette struct {
	value *CustomColorPalette
	isSet bool
}

func (v NullableCustomColorPalette) Get() *CustomColorPalette {
	return v.value
}

func (v *NullableCustomColorPalette) Set(val *CustomColorPalette) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomColorPalette) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomColorPalette) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomColorPalette(val *CustomColorPalette) *NullableCustomColorPalette {
	return &NullableCustomColorPalette{value: val, isSet: true}
}

func (v NullableCustomColorPalette) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomColorPalette) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


