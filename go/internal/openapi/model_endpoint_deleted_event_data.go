/*
Svix API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EndpointDeletedEventData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointDeletedEventData{}

// EndpointDeletedEventData Sent when an endpoint is created, updated, or deleted
type EndpointDeletedEventData struct {
	// The app's ID
	AppId string `json:"appId"`
	// The app's UID
	AppUid NullableString `json:"appUid,omitempty" validate:"regexp=^[a-zA-Z0-9\\\\-_.]+$"`
	// The ep's ID
	EndpointId string `json:"endpointId"`
	// The ep's UID
	EndpointUid NullableString `json:"endpointUid,omitempty" validate:"regexp=^[a-zA-Z0-9\\\\-_.]+$"`
}

type _EndpointDeletedEventData EndpointDeletedEventData

// NewEndpointDeletedEventData instantiates a new EndpointDeletedEventData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointDeletedEventData(appId string, endpointId string) *EndpointDeletedEventData {
	this := EndpointDeletedEventData{}
	this.AppId = appId
	this.EndpointId = endpointId
	return &this
}

// NewEndpointDeletedEventDataWithDefaults instantiates a new EndpointDeletedEventData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointDeletedEventDataWithDefaults() *EndpointDeletedEventData {
	this := EndpointDeletedEventData{}
	return &this
}

// GetAppId returns the AppId field value
func (o *EndpointDeletedEventData) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *EndpointDeletedEventData) GetAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *EndpointDeletedEventData) SetAppId(v string) {
	o.AppId = v
}

// GetAppUid returns the AppUid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EndpointDeletedEventData) GetAppUid() string {
	if o == nil || IsNil(o.AppUid.Get()) {
		var ret string
		return ret
	}
	return *o.AppUid.Get()
}

// GetAppUidOk returns a tuple with the AppUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EndpointDeletedEventData) GetAppUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppUid.Get(), o.AppUid.IsSet()
}

// HasAppUid returns a boolean if a field has been set.
func (o *EndpointDeletedEventData) HasAppUid() bool {
	if o != nil && o.AppUid.IsSet() {
		return true
	}

	return false
}

// SetAppUid gets a reference to the given NullableString and assigns it to the AppUid field.
func (o *EndpointDeletedEventData) SetAppUid(v string) {
	o.AppUid.Set(&v)
}
// SetAppUidNil sets the value for AppUid to be an explicit nil
func (o *EndpointDeletedEventData) SetAppUidNil() {
	o.AppUid.Set(nil)
}

// UnsetAppUid ensures that no value is present for AppUid, not even an explicit nil
func (o *EndpointDeletedEventData) UnsetAppUid() {
	o.AppUid.Unset()
}

// GetEndpointId returns the EndpointId field value
func (o *EndpointDeletedEventData) GetEndpointId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndpointId
}

// GetEndpointIdOk returns a tuple with the EndpointId field value
// and a boolean to check if the value has been set.
func (o *EndpointDeletedEventData) GetEndpointIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndpointId, true
}

// SetEndpointId sets field value
func (o *EndpointDeletedEventData) SetEndpointId(v string) {
	o.EndpointId = v
}

// GetEndpointUid returns the EndpointUid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EndpointDeletedEventData) GetEndpointUid() string {
	if o == nil || IsNil(o.EndpointUid.Get()) {
		var ret string
		return ret
	}
	return *o.EndpointUid.Get()
}

// GetEndpointUidOk returns a tuple with the EndpointUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EndpointDeletedEventData) GetEndpointUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndpointUid.Get(), o.EndpointUid.IsSet()
}

// HasEndpointUid returns a boolean if a field has been set.
func (o *EndpointDeletedEventData) HasEndpointUid() bool {
	if o != nil && o.EndpointUid.IsSet() {
		return true
	}

	return false
}

// SetEndpointUid gets a reference to the given NullableString and assigns it to the EndpointUid field.
func (o *EndpointDeletedEventData) SetEndpointUid(v string) {
	o.EndpointUid.Set(&v)
}
// SetEndpointUidNil sets the value for EndpointUid to be an explicit nil
func (o *EndpointDeletedEventData) SetEndpointUidNil() {
	o.EndpointUid.Set(nil)
}

// UnsetEndpointUid ensures that no value is present for EndpointUid, not even an explicit nil
func (o *EndpointDeletedEventData) UnsetEndpointUid() {
	o.EndpointUid.Unset()
}

func (o EndpointDeletedEventData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointDeletedEventData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["appId"] = o.AppId
	if o.AppUid.IsSet() {
		toSerialize["appUid"] = o.AppUid.Get()
	}
	toSerialize["endpointId"] = o.EndpointId
	if o.EndpointUid.IsSet() {
		toSerialize["endpointUid"] = o.EndpointUid.Get()
	}
	return toSerialize, nil
}

func (o *EndpointDeletedEventData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"appId",
		"endpointId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEndpointDeletedEventData := _EndpointDeletedEventData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEndpointDeletedEventData)

	if err != nil {
		return err
	}

	*o = EndpointDeletedEventData(varEndpointDeletedEventData)

	return err
}

type NullableEndpointDeletedEventData struct {
	value *EndpointDeletedEventData
	isSet bool
}

func (v NullableEndpointDeletedEventData) Get() *EndpointDeletedEventData {
	return v.value
}

func (v *NullableEndpointDeletedEventData) Set(val *EndpointDeletedEventData) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointDeletedEventData) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointDeletedEventData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointDeletedEventData(val *EndpointDeletedEventData) *NullableEndpointDeletedEventData {
	return &NullableEndpointDeletedEventData{value: val, isSet: true}
}

func (v NullableEndpointDeletedEventData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointDeletedEventData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


