/*
Svix API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the OperationalWebhookEndpointOut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OperationalWebhookEndpointOut{}

// OperationalWebhookEndpointOut struct for OperationalWebhookEndpointOut
type OperationalWebhookEndpointOut struct {
	CreatedAt time.Time `json:"createdAt"`
	// An example endpoint name
	Description string `json:"description"`
	Disabled *bool `json:"disabled,omitempty"`
	FilterTypes []string `json:"filterTypes,omitempty"`
	// The ep's ID
	Id string `json:"id"`
	Metadata map[string]string `json:"metadata"`
	RateLimit NullableInt32 `json:"rateLimit,omitempty"`
	// Optional unique identifier for the endpoint
	Uid NullableString `json:"uid,omitempty" validate:"regexp=^[a-zA-Z0-9\\\\-_.]+$"`
	UpdatedAt time.Time `json:"updatedAt"`
	Url string `json:"url"`
}

type _OperationalWebhookEndpointOut OperationalWebhookEndpointOut

// NewOperationalWebhookEndpointOut instantiates a new OperationalWebhookEndpointOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOperationalWebhookEndpointOut(createdAt time.Time, description string, id string, metadata map[string]string, updatedAt time.Time, url string) *OperationalWebhookEndpointOut {
	this := OperationalWebhookEndpointOut{}
	this.CreatedAt = createdAt
	this.Description = description
	var disabled bool = false
	this.Disabled = &disabled
	this.Id = id
	this.Metadata = metadata
	this.UpdatedAt = updatedAt
	this.Url = url
	return &this
}

// NewOperationalWebhookEndpointOutWithDefaults instantiates a new OperationalWebhookEndpointOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOperationalWebhookEndpointOutWithDefaults() *OperationalWebhookEndpointOut {
	this := OperationalWebhookEndpointOut{}
	var disabled bool = false
	this.Disabled = &disabled
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *OperationalWebhookEndpointOut) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *OperationalWebhookEndpointOut) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *OperationalWebhookEndpointOut) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDescription returns the Description field value
func (o *OperationalWebhookEndpointOut) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *OperationalWebhookEndpointOut) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *OperationalWebhookEndpointOut) SetDescription(v string) {
	o.Description = v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *OperationalWebhookEndpointOut) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationalWebhookEndpointOut) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *OperationalWebhookEndpointOut) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *OperationalWebhookEndpointOut) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetFilterTypes returns the FilterTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OperationalWebhookEndpointOut) GetFilterTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.FilterTypes
}

// GetFilterTypesOk returns a tuple with the FilterTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OperationalWebhookEndpointOut) GetFilterTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.FilterTypes) {
		return nil, false
	}
	return o.FilterTypes, true
}

// HasFilterTypes returns a boolean if a field has been set.
func (o *OperationalWebhookEndpointOut) HasFilterTypes() bool {
	if o != nil && !IsNil(o.FilterTypes) {
		return true
	}

	return false
}

// SetFilterTypes gets a reference to the given []string and assigns it to the FilterTypes field.
func (o *OperationalWebhookEndpointOut) SetFilterTypes(v []string) {
	o.FilterTypes = v
}

// GetId returns the Id field value
func (o *OperationalWebhookEndpointOut) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OperationalWebhookEndpointOut) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OperationalWebhookEndpointOut) SetId(v string) {
	o.Id = v
}

// GetMetadata returns the Metadata field value
func (o *OperationalWebhookEndpointOut) GetMetadata() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *OperationalWebhookEndpointOut) GetMetadataOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *OperationalWebhookEndpointOut) SetMetadata(v map[string]string) {
	o.Metadata = v
}

// GetRateLimit returns the RateLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OperationalWebhookEndpointOut) GetRateLimit() int32 {
	if o == nil || IsNil(o.RateLimit.Get()) {
		var ret int32
		return ret
	}
	return *o.RateLimit.Get()
}

// GetRateLimitOk returns a tuple with the RateLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OperationalWebhookEndpointOut) GetRateLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RateLimit.Get(), o.RateLimit.IsSet()
}

// HasRateLimit returns a boolean if a field has been set.
func (o *OperationalWebhookEndpointOut) HasRateLimit() bool {
	if o != nil && o.RateLimit.IsSet() {
		return true
	}

	return false
}

// SetRateLimit gets a reference to the given NullableInt32 and assigns it to the RateLimit field.
func (o *OperationalWebhookEndpointOut) SetRateLimit(v int32) {
	o.RateLimit.Set(&v)
}
// SetRateLimitNil sets the value for RateLimit to be an explicit nil
func (o *OperationalWebhookEndpointOut) SetRateLimitNil() {
	o.RateLimit.Set(nil)
}

// UnsetRateLimit ensures that no value is present for RateLimit, not even an explicit nil
func (o *OperationalWebhookEndpointOut) UnsetRateLimit() {
	o.RateLimit.Unset()
}

// GetUid returns the Uid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OperationalWebhookEndpointOut) GetUid() string {
	if o == nil || IsNil(o.Uid.Get()) {
		var ret string
		return ret
	}
	return *o.Uid.Get()
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OperationalWebhookEndpointOut) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uid.Get(), o.Uid.IsSet()
}

// HasUid returns a boolean if a field has been set.
func (o *OperationalWebhookEndpointOut) HasUid() bool {
	if o != nil && o.Uid.IsSet() {
		return true
	}

	return false
}

// SetUid gets a reference to the given NullableString and assigns it to the Uid field.
func (o *OperationalWebhookEndpointOut) SetUid(v string) {
	o.Uid.Set(&v)
}
// SetUidNil sets the value for Uid to be an explicit nil
func (o *OperationalWebhookEndpointOut) SetUidNil() {
	o.Uid.Set(nil)
}

// UnsetUid ensures that no value is present for Uid, not even an explicit nil
func (o *OperationalWebhookEndpointOut) UnsetUid() {
	o.Uid.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *OperationalWebhookEndpointOut) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *OperationalWebhookEndpointOut) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *OperationalWebhookEndpointOut) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetUrl returns the Url field value
func (o *OperationalWebhookEndpointOut) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *OperationalWebhookEndpointOut) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *OperationalWebhookEndpointOut) SetUrl(v string) {
	o.Url = v
}

func (o OperationalWebhookEndpointOut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OperationalWebhookEndpointOut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["description"] = o.Description
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if o.FilterTypes != nil {
		toSerialize["filterTypes"] = o.FilterTypes
	}
	toSerialize["id"] = o.Id
	toSerialize["metadata"] = o.Metadata
	if o.RateLimit.IsSet() {
		toSerialize["rateLimit"] = o.RateLimit.Get()
	}
	if o.Uid.IsSet() {
		toSerialize["uid"] = o.Uid.Get()
	}
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

func (o *OperationalWebhookEndpointOut) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"description",
		"id",
		"metadata",
		"updatedAt",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOperationalWebhookEndpointOut := _OperationalWebhookEndpointOut{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOperationalWebhookEndpointOut)

	if err != nil {
		return err
	}

	*o = OperationalWebhookEndpointOut(varOperationalWebhookEndpointOut)

	return err
}

type NullableOperationalWebhookEndpointOut struct {
	value *OperationalWebhookEndpointOut
	isSet bool
}

func (v NullableOperationalWebhookEndpointOut) Get() *OperationalWebhookEndpointOut {
	return v.value
}

func (v *NullableOperationalWebhookEndpointOut) Set(val *OperationalWebhookEndpointOut) {
	v.value = val
	v.isSet = true
}

func (v NullableOperationalWebhookEndpointOut) IsSet() bool {
	return v.isSet
}

func (v *NullableOperationalWebhookEndpointOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperationalWebhookEndpointOut(val *OperationalWebhookEndpointOut) *NullableOperationalWebhookEndpointOut {
	return &NullableOperationalWebhookEndpointOut{value: val, isSet: true}
}

func (v NullableOperationalWebhookEndpointOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperationalWebhookEndpointOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


